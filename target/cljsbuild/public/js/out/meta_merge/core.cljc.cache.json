["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$meta-merge.core","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","^:","^:"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$meta*",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/koompi/project/gmail/target/cljsbuild/public/js/out/meta_merge/core.cljc","~:line",4,"~:column",8,"~:end-line",4,"~:end-column",13,"~:private",true,"~:arglists",["~#list",["~$quote",["^H",[["~$obj"]]]]],"~:doc","Returns the metadata of an object, or nil if the object cannot hold\n  metadata."],"^F",true,"^5","~$meta-merge.core/meta*","~:variadic",false,"^A","target/cljsbuild/public/js/out/meta_merge/core.cljc","^E",13,"~:method-params",["^H",[["^J"]]],"~:protocol-impl",null,"~:arglists-meta",["^H",[null,null]],"^C",1,"^B",4,"^D",4,"~:max-fixed-arity",1,"~:fn-var",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^K","Returns the metadata of an object, or nil if the object cannot hold\n  metadata."],"~$with-meta*",["^ ","^?",null,"^@",["^ ","^A","/home/koompi/project/gmail/target/cljsbuild/public/js/out/meta_merge/core.cljc","^B",13,"^C",8,"^D",13,"^E",18,"^F",true,"^G",["^H",["^I",["^H",[["^J","~$m"]]]]],"^K","Returns an object of the same type and value as obj, with map m as its\n  metadata if the object can hold metadata."],"^F",true,"^5","~$meta-merge.core/with-meta*","^M",false,"^A","target/cljsbuild/public/js/out/meta_merge/core.cljc","^E",18,"^N",["^H",[["^J","~$m"]]],"^O",null,"^P",["^H",[null,null]],"^C",1,"^B",13,"^D",13,"^Q",2,"^R",true,"^G",["^H",["^I",["^H",[["^J","~$m"]]]]],"^K","Returns an object of the same type and value as obj, with map m as its\n  metadata if the object can hold metadata."],"~$displace?",["^ ","^?",null,"^@",["^ ","^A","/home/koompi/project/gmail/target/cljsbuild/public/js/out/meta_merge/core.cljc","^B",22,"^C",8,"^D",22,"^E",17,"^F",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^K","Returns true if the object is marked as displaceable"],"^F",true,"^5","~$meta-merge.core/displace?","^M",false,"^A","target/cljsbuild/public/js/out/meta_merge/core.cljc","^E",17,"^N",["^H",[["^J"]]],"^O",null,"^P",["^H",[null,null]],"^C",1,"^B",22,"^D",22,"^Q",1,"^R",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^K","Returns true if the object is marked as displaceable"],"~$replace?",["^ ","^?",null,"^@",["^ ","^A","/home/koompi/project/gmail/target/cljsbuild/public/js/out/meta_merge/core.cljc","^B",27,"^C",8,"^D",27,"^E",16,"^F",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^K","Returns true if the object is marked as replaceable"],"^F",true,"^5","~$meta-merge.core/replace?","^M",false,"^A","target/cljsbuild/public/js/out/meta_merge/core.cljc","^E",16,"^N",["^H",[["^J"]]],"^O",null,"^P",["^H",[null,null]],"^C",1,"^B",27,"^D",27,"^Q",1,"^R",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^K","Returns true if the object is marked as replaceable"],"~$top-displace?",["^ ","^?",null,"^@",["^ ","^A","/home/koompi/project/gmail/target/cljsbuild/public/js/out/meta_merge/core.cljc","^B",32,"^C",8,"^D",32,"^E",21,"^F",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^K","Returns true if the object is marked as top-displaceable"],"^F",true,"^5","~$meta-merge.core/top-displace?","^M",false,"^A","target/cljsbuild/public/js/out/meta_merge/core.cljc","^E",21,"^N",["^H",[["^J"]]],"^O",null,"^P",["^H",[null,null]],"^C",1,"^B",32,"^D",32,"^Q",1,"^R",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^K","Returns true if the object is marked as top-displaceable"],"~$different-priority?",["^ ","^?",null,"^@",["^ ","^A","/home/koompi/project/gmail/target/cljsbuild/public/js/out/meta_merge/core.cljc","^B",37,"^C",8,"^D",37,"^E",27,"^F",true,"^G",["^H",["^I",["^H",[["~$left","~$right"]]]]],"^K","Returns true if either left has a higher priority than right or vice versa."],"^F",true,"^5","~$meta-merge.core/different-priority?","^M",false,"^A","target/cljsbuild/public/js/out/meta_merge/core.cljc","^E",27,"^N",["^H",[["^10","^11"]]],"^O",null,"^P",["^H",[null,null]],"^C",1,"^B",37,"^D",37,"^Q",2,"^R",true,"^G",["^H",["^I",["^H",[["^10","^11"]]]]],"^K","Returns true if either left has a higher priority than right or vice versa."],"~$remove-top-displace",["^ ","^?",null,"^@",["^ ","^A","/home/koompi/project/gmail/target/cljsbuild/public/js/out/meta_merge/core.cljc","^B",44,"^C",8,"^D",44,"^E",27,"^F",true,"^G",["^H",["^I",["^H",[["^J"]]]]]],"^F",true,"^5","~$meta-merge.core/remove-top-displace","^M",false,"^A","target/cljsbuild/public/js/out/meta_merge/core.cljc","^E",27,"^N",["^H",[["^J"]]],"^O",null,"^P",["^H",[null,null]],"^C",1,"^B",44,"^D",44,"^Q",1,"^R",true,"^G",["^H",["^I",["^H",[["^J"]]]]]],"~$pick-prioritized",["^ ","^?",null,"^@",["^ ","^A","/home/koompi/project/gmail/target/cljsbuild/public/js/out/meta_merge/core.cljc","^B",49,"^C",8,"^D",49,"^E",24,"^F",true,"^G",["^H",["^I",["^H",[["^10","^11"]]]]],"^K","Picks the highest prioritized element of left and right and merge their\n  metadata."],"^F",true,"^5","~$meta-merge.core/pick-prioritized","^M",false,"^A","target/cljsbuild/public/js/out/meta_merge/core.cljc","^E",24,"^N",["^H",[["^10","^11"]]],"^O",null,"^P",["^H",[null,null]],"^C",1,"^B",49,"^D",49,"^Q",2,"^R",true,"^G",["^H",["^I",["^H",[["^10","^11"]]]]],"^K","Picks the highest prioritized element of left and right and merge their\n  metadata."],"~$meta-merge",["^ ","^?",null,"^@",["^ ","^A","/home/koompi/project/gmail/target/cljsbuild/public/js/out/meta_merge/core.cljc","^B",80,"^C",7,"^D",80,"^E",17,"^G",["^H",["^I",["^H",[[],["^10"],["^10","^11"],["^10","^11","~$&","~$more"]]]]],"^K","Recursively merge values based on the information in their metadata.","~:top-fn",["^ ","^M",true,"^Q",2,"^N",["^H",[[],["^10"],["^10","^11"]]],"^G",["^H",[[],["^10"],["^10","^11"],["^10","^11","~$&","^18"]]],"^P",["^H",[null,null,null,null]]]],"^5","~$meta-merge.core/meta-merge","^M",true,"^A","target/cljsbuild/public/js/out/meta_merge/core.cljc","^E",17,"^19",["^ ","^M",true,"^Q",2,"^N",["^H",[[],["^10"],["^10","^11"]]],"^G",["^H",[[],["^10"],["^10","^11"],["^10","^11","~$&","^18"]]],"^P",["^H",[null,null,null,null]]],"^N",["^H",[[],["^10"],["^10","^11"]]],"^O",null,"^P",["^H",[null,null,null,null]],"^C",1,"^B",80,"^D",80,"^Q",2,"^R",true,"^G",["^H",[[],["^10"],["^10","^11"],["^10","^11","~$&","^18"]]],"^K","Recursively merge values based on the information in their metadata."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:top-displace","~:else","~:replace","~:prepend","~:displace"]],"~:order",["^1C","^1A","^1?","^1B","^1@"]],"^K",null]